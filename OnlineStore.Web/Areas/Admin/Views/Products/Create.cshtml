<script src="~/assets/admin/js/jquery-ui.min.js"></script>
<link href="~/assets/admin/css/jquery-ui.min.css" rel="stylesheet" />
<script src="~/assets/admin/js/app/product/edit.js"></script>

@model OnlineStore.Data.Entities.Product
@{
    ViewBag.Module = "Sản phẩm";
    ViewBag.Title = "Tạo mới";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortDescrition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortDescrition, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortDescrition, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Active)
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StatusId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StatusId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubCategoryId, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SubCategoryId, new SelectList(ViewBag.SubCategories, "Id", "Name"), "--- Chọn danh mục ---", new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.SubCategoryId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BrandId, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BrandId, new SelectList(ViewBag.Brands, "Id", "Name"), "--- Chọn thương hiệu ---", new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.BrandId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UnitId, new SelectList(ViewBag.Units, "Id", "Name"), "--- Chọn đơn vị tính ---", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupplierId, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.SupplierId, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.SupplierId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupplierId, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.SupplierId, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.SupplierId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label" for="dZUpload">Đính kèm công văn</label>
            <div class="col-md-10">
                <div id="dZUpload" class="dropzone dz-clickable">
                    <div class="dz-default dz-message">Kéo tài liệu hoặc nhấp chuột để tải lên</div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-white btn-info btn-bold">
                    <i class="ace-icon fa fa-floppy-o bigger-120 blue"></i>
                    Lưu lại
                </button>
            </div>
        </div>

        @*<form action="~/Products/SaveUploadedFile" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm" style="width: 50px; background: none; border: none;">
            <div class="fallback">
                <input name="file" type="file" multiple />
                <input type="submit" value="Upload" />
            </div>
        </form>*@

    </div>
}
<div>
    <i class="ace-icon fa fa-reply icon-only"></i> @Html.ActionLink("Trở về trang chủ", "Index")
</div>

<script>
    $(document).ready(function() {
        $("#dZUpload").dropzone({
            //url: sendUrl,
            url: "/Admin/Photos/AddProductPhotos",
            addRemoveLinks: true,
            dictRemoveFile: "Xóa ảnh",
            removedfile: function(file) {
                var _ref;
                $.post("/Admin/Photos/RemoveProductPhotos", { productId: @(Model?.Id ?? 0), fileName: file.name, fileSize: file.size }, function(data) {
                    if (data.success == true) {
                        return (_ref = file.previewElement) != null ? _ref.parentNode.removeChild(file.previewElement) : void 0;
                    } else {
                        alert("Không thể xóa ảnh");
                    }
                });
            },
            sending: function(file, xhr, data) {
                data.append("productId", @(Model?.Id ?? 0));
            },
            success: function(file, response) {
                file.previewElement.classList.add("dz-success");
                console.log("Successfully uploaded :");
            },
            error: function(file, response) {
                file.previewElement.classList.add("dz-error");
                console.log("error: " + response);
            }
        });
    });

</script>

<style>
.dropzone {
    border: 2px dashed #0087F7;
}
</style>