<script src="~/assets/admin/js/app/product/edit.js"></script>

@using OnlineStore.Data.Entities
@model OnlineStore.Data.Entities.Product
@{
    ViewBag.Module = "Sản phẩm";
    ViewBag.Title = "Cập nhật";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.CreatedOn)
    @Html.HiddenFor(x => x.CreatedById)
    @Html.HiddenFor(x => x.ModifiedOn)
    @Html.HiddenFor(x => x.ModifiedById)
    @Html.HiddenFor(x => x.NumberOfClicks)

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortDescrition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortDescrition, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortDescrition, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Featured, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label>
                    @{
                        var isFeatured = Model.Featured == true ? "checked" : "";
                        var isFeaturedValue = Model.Featured == true ? "true" : "false";
                    }
                    <input type="checkbox" name="Featured" class="ace ace-switch ace-switch-6" id="btnCheckFeatured" value="@isFeaturedValue" @isFeatured onclick="javascript: fnSetFeatured();" />
                    <span class="lbl"></span>
                </label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Publish, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <label>
                    @{
                        var isPublish = Model.Publish == true ? "checked" : "";
                        var isPublishValue = Model.Publish == true ? "true" : "false";
                    }
                    <input type="checkbox" name="Publish" class="ace ace-switch ace-switch-6" id="btnCheckPublish" value="@isPublishValue" @isPublish onclick="javascript: fnSetPublish();"/>
                    <span class="lbl"></span>
                </label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StatusId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StatusId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubCategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(model => model.SubCategoryId, new SelectList(ViewBag.SubCategories, "Id", "Name"), "--- Chọn danh mục ---", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })*@
                <select class="slSubCategory form-control">
                    @{
                        var subCategories = (List<SubCategory>)ViewBag.SubCategories;
                        var categories = subCategories.GroupBy(x => new { x.Category.Id, x.Category.Name });

                        foreach (var category in categories)
                        {
                            <optgroup label="@category.Key.Name">
                                @foreach (var subCategory in category)
                                {
                                    if (Model.SubCategoryId == subCategory.Id)
                                    {
                                        <option value="@subCategory.Id" selected="selected">@subCategory.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@subCategory.Id">@subCategory.Name</option>
                                    }
                                }
                            </optgroup>
                        }
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BrandId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BrandId, new SelectList(ViewBag.Brands, "Id", "Name"), "--- Chọn thương hiệu ---", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
                <select name="BrandId" class="slBrand form-control">
                    @{
                        var brands = (List<Brand>)ViewBag.Brands;

                        foreach (var brand in brands)
                        {
                            if (Model.BrandId == brand.Id)
                            {
                                <option value="@brand.Id" selected="selected">@brand.Name</option>
                            }
                            else
                            {
                                <option value="@brand.Id">@brand.Name</option>
                            }
                        }
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UnitId, new SelectList(ViewBag.Units, "Id", "Name"), "--- Chọn đơn vị tính---", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupplierId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SupplierId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Chọn ảnh sản phẩm</label>
            <div class="col-md-10">
                <i class="ace-icon fa fa-hand-o-right icon-animated-hand-pointer blue"></i>
                <a href="#" class="green" onclick="javascript: fnSelectProductPhotos();">Chọn ảnh có sẵn</a>
            </div>
        </div>

        @*Product photo*@
        <div id="product-photos">
            @Html.Action("_ProductPhotos_Edit", "ProductPhotos", new { productId = Model.Id })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-white btn-info btn-bold">
                    <i class="ace-icon fa fa-floppy-o bigger-120 blue"></i>
                    Cập nhật
                </button>
            </div>
        </div>
    </div>
}

<div>
    <i class="ace-icon fa fa-reply icon-only"></i> @Html.ActionLink("Trở về trang chủ", "Index")
</div>

<script>
    $(document).ready(function() {
        $(".slSubCategory").select2({
            placeholder: "Chọn một danh mục",
            allowClear: true
        });

        $(".slBrand").select2({
            placeholder: "Chọn một thương hiệu",
            allowClear: true
        });

        //$('slSubCategory').val('US'); // Select the option with a value of 'US'
        //$('slSubCategory').trigger('change'); // Notify any JS components that the value changed
    });

    function fnSetFeatured() {
        $("#btnCheckFeatured").val($("#btnCheckFeatured").is(':checked'));
    }

    function fnSetPublished() {
        $("#btnCheckPublish").val($("#btnCheckPublish").is(':checked'));
    }
</script>
